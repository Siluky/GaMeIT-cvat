# Generated by Django 3.2.12 on 2022-07-21 19:26

import cvat.apps.gamification.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Cool Badge 123', max_length=40)),
                ('instruction', models.CharField(default='Do something cool', max_length=80)),
                ('goal', models.IntegerField(default=10)),
                ('goalunit', models.CharField(default='images', max_length=20)),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BadgeStatus',
            fields=[
                ('id', models.CharField(default='0-0', max_length=8, primary_key=True, serialize=False)),
                ('progress', models.IntegerField(default=0)),
                ('got', models.BooleanField(default=False)),
                ('receivedOn', models.DateTimeField(default=django.utils.timezone.now)),
                ('badge', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.badge')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', models.CharField(default='', max_length=80)),
                ('progress', models.IntegerField(default=0)),
                ('goal', models.IntegerField(default=10)),
                ('reward', models.IntegerField(default=100)),
                ('challengeType', models.CharField(choices=[('Daily', 'DAILY'), ('Weekly', 'WEEKLY'), ('Special', 'SPECIAL')], default=cvat.apps.gamification.models.ChallengeChoice['DAILY'], max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.challenge')),
            ],
        ),
        migrations.CreateModel(
            name='ItemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(default='', max_length=80)),
                ('answerA', models.CharField(default='A: ', max_length=32)),
                ('answerB', models.CharField(default='B: ', max_length=32)),
                ('answerC', models.CharField(default='C: ', max_length=32)),
                ('answerD', models.CharField(default='D: ', max_length=32)),
                ('correctAnswer', models.IntegerField(choices=[(1, 'A'), (2, 'B'), (3, 'C'), (4, 'D')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='ShopItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemName', models.CharField(default='Item', max_length=40)),
                ('price', models.IntegerField(default=100)),
                ('iconpath', models.CharField(default='', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=40)),
                ('value', models.CharField(default='', max_length=40)),
                ('hoverOverText', models.CharField(default='', max_length=40)),
                ('iconpath', models.CharField(default='', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='StatisticsStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.statistic')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateField(default=django.utils.timezone.now)),
                ('currentEnergy', models.IntegerField(default=0)),
                ('energizersDone', models.IntegerField(default=0)),
                ('current_balance', models.IntegerField(default=0)),
                ('badges', models.ManyToManyField(through='gamification.BadgeStatus', to='gamification.Badge')),
                ('challenges', models.ManyToManyField(through='gamification.ChallengeStatus', to='gamification.Challenge')),
                ('items', models.ManyToManyField(through='gamification.ItemStatus', to='gamification.ShopItem')),
                ('statistics', models.ManyToManyField(through='gamification.StatisticsStatus', to='gamification.Statistic')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='statisticsstatus',
            name='userProfile',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.userprofile'),
        ),
        migrations.AddField(
            model_name='itemstatus',
            name='item',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.shopitem'),
        ),
        migrations.AddField(
            model_name='itemstatus',
            name='userProfile',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.userprofile'),
        ),
        migrations.CreateModel(
            name='EnergizerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('energizer', models.CharField(choices=[('TETRIS', 'TETRIS'), ('SNAKE', 'SNAKE'), ('QUIZ', 'QUIZ'), ('NONE', 'NONE')], default=cvat.apps.gamification.models.EnergizerChoice['NONE'], max_length=32)),
                ('score', models.IntegerField(default=0)),
                ('userProfile', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='challengestatus',
            name='userProfile',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.userprofile'),
        ),
        migrations.AddField(
            model_name='badgestatus',
            name='userProfile',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='gamification.userprofile'),
        ),
    ]
